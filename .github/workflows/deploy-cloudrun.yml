# Generated by Devyntra • workflow=v2-sse • do-not-edit
name: Deploy to Cloud Run
on:
  workflow_dispatch:
    inputs:
      deployment_id:
        description: 'Devyntra deployment id'
        required: false
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v4
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - uses: 'google-github-actions/setup-gcloud@v2'
      - name: Build and Deploy with Dockerfile
        env:
          PROJECT_ID: devyntra-500e4
          REGION: us-central1
          SERVICE: devyntra-google-cloud-run
        run: |
          set -e
          gcloud config set project "$PROJECT_ID"
          # Ensure AR docker auth is configured
          gcloud auth configure-docker "$REGION-docker.pkg.dev" -q
          IMAGE="$REGION-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/$SERVICE:${{ github.sha }}"
          echo "Building $IMAGE"
          docker build -t "$IMAGE" .
          docker push "$IMAGE"
          gcloud run deploy "$SERVICE"             --region="$REGION"             --image="$IMAGE"             --allow-unauthenticated             --port=8080
      - name: Fetch Service URL
        id: fetch_url
        env:
          REGION: us-central1
          SERVICE: devyntra-google-cloud-run
        run: |
          set -e
          URL=$(gcloud run services describe "$SERVICE" --region="$REGION" --format='value(status.url)' 2>/dev/null || echo "")
          echo "Fetched URL: $URL"
          echo "SERVICE_URL=$URL" >> $GITHUB_OUTPUT
          echo "SERVICE_URL=$URL" >> $GITHUB_ENV
      - name: Notify Devyntra
        if: always()
        env:
          WEBHOOK_URL: ${{ secrets.DEVYNTRA_WEBHOOK_URL }}
          WEBHOOK_TOKEN: ${{ secrets.DEVYNTRA_WEBHOOK_TOKEN }}
          DEPLOYMENT_ID: ${{ github.event.inputs.deployment_id }}
          SERVICE_URL: ${{ steps.fetch_url.outputs.SERVICE_URL }}
        run: |
          STATUS="success"
          if [ "${{ job.status }}" != "success" ]; then STATUS="failure"; fi
          
          # Build JSON payload properly
          PAYLOAD=$(cat <<EOF
          {
            "deploymentId": "$DEPLOYMENT_ID",
            "status": "$STATUS",
            "deploymentUrl": "$SERVICE_URL",
            "message": "auto create ci/cd pipeline and deployed with docker using gcp"
          }
          EOF
          )
          
          echo "Webhook payload: $PAYLOAD"
          CLEAN_URL=$(printf "%s" "$WEBHOOK_URL" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' -e 's/^"//' -e 's/"$//')
          CLEAN_TOKEN=$(printf "%s" "$WEBHOOK_TOKEN" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' -e 's/^"//' -e 's/"$//')
          if [ -n "$CLEAN_URL" ] && [ -n "$CLEAN_TOKEN" ]; then
            curl -sS -X POST "$CLEAN_URL"               -H "Content-Type: application/json"               -H "X-Devyntra-Token: $CLEAN_TOKEN"               -d "$PAYLOAD" || true
          fi
# End Devyntra workflow v2-sse
